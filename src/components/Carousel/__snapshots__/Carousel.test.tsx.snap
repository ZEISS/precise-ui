// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Carousel /> should render a <Carousel> component with several pages 1`] = `
.c2 {
  position: relative;
  touch-action: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 {
  outline: none;
}

.c5 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c6 {
  height: 0.75rem;
  width: 0.75rem;
  background-color: rgba(224,225,221,1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: 0.25rem;
  background-color: rgba(116,118,120,1);
}

.c7 {
  height: 0.75rem;
  width: 0.75rem;
  background-color: rgba(224,225,221,1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: 0.25rem;
}

.c4 {
  min-width: 100%;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  left: 0%;
  -webkit-transition: left 0.3s ease-in-out;
  transition: left 0.3s ease-in-out;
}

.c1 {
  position: relative;
  box-sizing: border-box;
  overflow: hidden;
}

<Carousel>
  <styled.div
    onKeyDown={[Function]}
    tabIndex={0}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  outline: none;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      onKeyDown={[Function]}
      tabIndex={0}
    >
      <div
        className="c0"
        onKeyDown={[Function]}
        tabIndex={0}
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  position: relative;
  box-sizing: border-box;
  overflow: hidden;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <InteractiveSurface
                onChange={[Function]}
                opaque={false}
              >
                <styled.div
                  onClickCapture={[Function]}
                  onMouseDownCapture={[Function]}
                  onTouchStartCapture={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  position: relative;
  touch-action: ",
                            [Function],
                            ";
  user-select: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClickCapture={[Function]}
                    onMouseDownCapture={[Function]}
                    onTouchStartCapture={[Function]}
                  >
                    <div
                      className="c2"
                      onClickCapture={[Function]}
                      onMouseDownCapture={[Function]}
                      onTouchStartCapture={[Function]}
                    >
                      <styled.div
                        selectedIndex={0}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "
  box-sizing: border-box;
  display: flex;
  position: relative;
  left: ",
                                  [Function],
                                  "%;
  transition: left ",
                                  "0.3s",
                                  " ",
                                  "ease-in-out",
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={[Function]}
                          selectedIndex={0}
                        >
                          <div
                            className="c3"
                          >
                            <styled.div
                              key="item-0"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "
  min-width: 100%;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c4"
                                >
                                  <div>
                                    First page.
                                  </div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div
                              key="item-1"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "
  min-width: 100%;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c4"
                                >
                                  <div>
                                    Second page.
                                  </div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div
                              key="item-2"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "
  min-width: 100%;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c4"
                                >
                                  <div>
                                    Third page.
                                  </div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div
                              key="item-3"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "
  min-width: 100%;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c4"
                                >
                                  <div>
                                    Final page.
                                  </div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </InteractiveSurface>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  box-sizing: border-box;
  display: flex;
  justify-content: center;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c5"
            >
              <styled.div
                active={true}
                index={0}
                key="bullet-0"
                onClick={[Function]}
              >
                <StyledComponent
                  active={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c7",
                        "rules": Array [
                          "
  height: ",
                          "0.75rem",
                          ";
  width: ",
                          "0.75rem",
                          ";
  background-color: rgba(224, 225, 221, 1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: ",
                          "0.25rem",
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  index={0}
                  onClick={[Function]}
                >
                  <div
                    className="c6"
                    onClick={[Function]}
                  />
                </StyledComponent>
              </styled.div>
              <styled.div
                active={false}
                index={1}
                key="bullet-1"
                onClick={[Function]}
              >
                <StyledComponent
                  active={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c7",
                        "rules": Array [
                          "
  height: ",
                          "0.75rem",
                          ";
  width: ",
                          "0.75rem",
                          ";
  background-color: rgba(224, 225, 221, 1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: ",
                          "0.25rem",
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  index={1}
                  onClick={[Function]}
                >
                  <div
                    className="c7"
                    onClick={[Function]}
                  />
                </StyledComponent>
              </styled.div>
              <styled.div
                active={false}
                index={2}
                key="bullet-2"
                onClick={[Function]}
              >
                <StyledComponent
                  active={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c7",
                        "rules": Array [
                          "
  height: ",
                          "0.75rem",
                          ";
  width: ",
                          "0.75rem",
                          ";
  background-color: rgba(224, 225, 221, 1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: ",
                          "0.25rem",
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  index={2}
                  onClick={[Function]}
                >
                  <div
                    className="c7"
                    onClick={[Function]}
                  />
                </StyledComponent>
              </styled.div>
              <styled.div
                active={false}
                index={3}
                key="bullet-3"
                onClick={[Function]}
              >
                <StyledComponent
                  active={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c7",
                        "rules": Array [
                          "
  height: ",
                          "0.75rem",
                          ";
  width: ",
                          "0.75rem",
                          ";
  background-color: rgba(224, 225, 221, 1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: ",
                          "0.25rem",
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  index={3}
                  onClick={[Function]}
                >
                  <div
                    className="c7"
                    onClick={[Function]}
                  />
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Carousel>
`;

exports[`<Carousel /> should render a <Carousel> component with several pages in and selectedIndex 1`] = `
.c2 {
  position: relative;
  touch-action: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 {
  outline: none;
}

.c5 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 {
  height: 0.75rem;
  width: 0.75rem;
  background-color: rgba(224,225,221,1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: 0.25rem;
  background-color: rgba(116,118,120,1);
}

.c6 {
  height: 0.75rem;
  width: 0.75rem;
  background-color: rgba(224,225,221,1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: 0.25rem;
}

.c4 {
  min-width: 100%;
}

.c3 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  left: -100%;
  -webkit-transition: left 0.3s ease-in-out;
  transition: left 0.3s ease-in-out;
}

.c1 {
  position: relative;
  box-sizing: border-box;
  overflow: hidden;
}

<Carousel
  selectedIndex={1}
>
  <styled.div
    onKeyDown={[Function]}
    tabIndex={0}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  outline: none;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      onKeyDown={[Function]}
      tabIndex={0}
    >
      <div
        className="c0"
        onKeyDown={[Function]}
        tabIndex={0}
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  position: relative;
  box-sizing: border-box;
  overflow: hidden;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <InteractiveSurface
                onChange={[Function]}
                opaque={false}
              >
                <styled.div
                  onClickCapture={[Function]}
                  onMouseDownCapture={[Function]}
                  onTouchStartCapture={[Function]}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  position: relative;
  touch-action: ",
                            [Function],
                            ";
  user-select: ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClickCapture={[Function]}
                    onMouseDownCapture={[Function]}
                    onTouchStartCapture={[Function]}
                  >
                    <div
                      className="c2"
                      onClickCapture={[Function]}
                      onMouseDownCapture={[Function]}
                      onTouchStartCapture={[Function]}
                    >
                      <styled.div
                        selectedIndex={1}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "
  box-sizing: border-box;
  display: flex;
  position: relative;
  left: ",
                                  [Function],
                                  "%;
  transition: left ",
                                  "0.3s",
                                  " ",
                                  "ease-in-out",
                                  ";
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={[Function]}
                          selectedIndex={1}
                        >
                          <div
                            className="c3"
                          >
                            <styled.div
                              key="item-0"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "
  min-width: 100%;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c4"
                                >
                                  <div>
                                    First page.
                                  </div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div
                              key="item-1"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "
  min-width: 100%;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c4"
                                >
                                  <div>
                                    Second page.
                                  </div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                            <styled.div
                              key="item-2"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "
  min-width: 100%;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c4"
                                >
                                  <div>
                                    Final page.
                                  </div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </InteractiveSurface>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bxivhb",
                  "isStatic": true,
                  "lastClassName": "c5",
                  "rules": Array [
                    "
  box-sizing: border-box;
  display: flex;
  justify-content: center;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bxivhb",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c5"
            >
              <styled.div
                active={false}
                index={0}
                key="bullet-0"
                onClick={[Function]}
              >
                <StyledComponent
                  active={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
  height: ",
                          "0.75rem",
                          ";
  width: ",
                          "0.75rem",
                          ";
  background-color: rgba(224, 225, 221, 1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: ",
                          "0.25rem",
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  index={0}
                  onClick={[Function]}
                >
                  <div
                    className="c6"
                    onClick={[Function]}
                  />
                </StyledComponent>
              </styled.div>
              <styled.div
                active={true}
                index={1}
                key="bullet-1"
                onClick={[Function]}
              >
                <StyledComponent
                  active={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
  height: ",
                          "0.75rem",
                          ";
  width: ",
                          "0.75rem",
                          ";
  background-color: rgba(224, 225, 221, 1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: ",
                          "0.25rem",
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  index={1}
                  onClick={[Function]}
                >
                  <div
                    className="c7"
                    onClick={[Function]}
                  />
                </StyledComponent>
              </styled.div>
              <styled.div
                active={false}
                index={2}
                key="bullet-2"
                onClick={[Function]}
              >
                <StyledComponent
                  active={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-ifAKCX",
                        "isStatic": false,
                        "lastClassName": "c6",
                        "rules": Array [
                          "
  height: ",
                          "0.75rem",
                          ";
  width: ",
                          "0.75rem",
                          ";
  background-color: rgba(224, 225, 221, 1);
  border-radius: 50%;
  display: inline-block;
  cursor: pointer;
  margin: ",
                          "0.25rem",
                          ";
  ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-ifAKCX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  index={2}
                  onClick={[Function]}
                >
                  <div
                    className="c6"
                    onClick={[Function]}
                  />
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Carousel>
`;
