// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<StackItem /> should render the StackItem with height and width declaration 1`] = `
.c0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 40%;
  height: 15px;
}

<StackItem
  height="15px"
  width="40%"
>
  <styled.div
    height="15px"
    width="40%"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  flex-grow: ",
              [Function],
              ";
  min-width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="15px"
      width="40%"
    >
      <div
        className="c0"
        height="15px"
        width="40%"
      >
        Content
      </div>
    </StyledComponent>
  </styled.div>
</StackItem>
`;

exports[`<StackItem /> should render the StackItem with no filling 1`] = `
.c0 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  min-width: auto;
  height: auto;
}

<StackItem
  nofill={true}
>
  <styled.div
    nofill={true}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  flex-grow: ",
              [Function],
              ";
  min-width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      nofill={true}
    >
      <div
        className="c0"
      />
    </StyledComponent>
  </styled.div>
</StackItem>
`;

exports[`<StackItem /> should render the StackItem with some content 1`] = `
.c0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: auto;
  height: auto;
}

<StackItem>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  flex-grow: ",
              [Function],
              ";
  min-width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        Item
      </div>
    </StyledComponent>
  </styled.div>
</StackItem>
`;

exports[`<StackItem /> should render the StackItem with width declaration 1`] = `
.c0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: 20px;
  height: auto;
}

<StackItem
  width="20px"
>
  <styled.div
    width="20px"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  flex-grow: ",
              [Function],
              ";
  min-width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      width="20px"
    >
      <div
        className="c0"
        width="20px"
      />
    </StyledComponent>
  </styled.div>
</StackItem>
`;

exports[`<StackItem /> should render the default StackItem 1`] = `
.c0 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-width: auto;
  height: auto;
}

<StackItem>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  flex-grow: ",
              [Function],
              ";
  min-width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      />
    </StyledComponent>
  </styled.div>
</StackItem>
`;
